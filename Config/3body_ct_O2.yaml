NBODY: 3
FILE_PREFIX: "ct_analysis_o2"

LARGE_DATA: True
LOAD_LARGE_DATA: True

CENTRALITY_CLASS:
  - [0, 90]
CT_BINS: [2, 4, 6, 8, 10, 14, 18, 23, 35]
PT_BINS: [2, 10]

BKG_MODELS: ["expo", "pol1", "pol2"]

BDT_EFFICIENCY: [0.10, 1., 0.01] # min, max ,step

MC_PATH: $HYPERML_TABLES_3/O2/SignalTableReweight.root
BKG_PATH: $HYPERML_TABLES_3/O2/ev_mix/DataTableEM_18r.root
DATA_PATH: $HYPERML_TABLES_3/O2/DataTable_18*.root
ANALYSIS_RESULTS_PATH: $HYPERML_TABLES_3/O2/AnalysisResultsQR.root

XGBOOST_PARAMS:
  # general parameters
  silent: 1 # print message (useful to understand whats happening)
  n_jobs: 8 # number of available threads
  # learning task parameters
  objective: binary:logistic
  random_state: 42
  eval_metric: auc
  tree_method: hist

SIGMA_MC: True

HYPERPARAMS:
  max_depth: 13
  learning_rate: 0.09823
  n_estimators: 181
  gamma: 0.4467
  min_child_weight: 5.751
  subsample: 0.7447
  colsample_bytree: 0.5727
  seed: 42

HYPERPARAMS_RANGE: #TODO: check if it works without tuples
  # booster parameters
  max_depth: !!python/tuple [5, 20] # defines the maximum depth of a single tree (regularization)
  learning_rate: !!python/tuple [0.01, 0.3] # learning rate
  n_estimators: !!python/tuple [50, 500] # number of boosting trees
  gamma: !!python/tuple [0.3, 1.1] # specifies the minimum loss reduction required to make a split
  min_child_weight: !!python/tuple [1, 12]
  subsample: !!python/tuple [0.5, 0.9] # denotes the fraction of observations to be randomly samples for each tree
  colsample_bytree: !!python/tuple [0.5, 0.9] # denotes the fraction of columns to be randomly samples for each tree
  # # lambda: (0,10]  # L2 regularization term on weights
  # # alpha: (0,10]  # L1 regularization term on weight

TRAINING_COLUMNS:
- pt
- cos_pa
# - dca_de
# - dca_pr
# - dca_pi
- tpc_ncls_de
- tpc_ncls_pr
- tpc_ncls_pi
- tpc_nsig_de
- tpc_nsig_pr
- tpc_nsig_pi
- dca_de_pr
- dca_de_pi
- dca_pr_pi
# - cos_pa_lambda
# - mppi_vert
# - dca_lambda_hyper
- dca_de_sv
- dca_pr_sv
- dca_pi_sv
- chi2
# - has_tof_de
# - has_tof_pr
# - has_tof_pi






